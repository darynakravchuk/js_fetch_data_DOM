{"version":3,"sources":["scripts/main.js"],"names":["baseUrl","detailedUrl","newItem","document","createElement","getPhones","fetch","then","response","json","catch","error","setTimeout","Error","getPhonesDetails","id","list","contacts","map","phone","Promise","all","phoneDetails","forEach","item","newPhone","textContent","name","append","body"],"mappings":";AAAA,aAyCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArCA,IAAMA,EACF,wEACEC,EACF,oEACEC,EAAUC,SAASC,cAAc,MAEjCC,EAAY,WACTC,OAAAA,MAAMN,GACVO,KAAK,SAACC,GAAaA,OAAAA,EAASC,SAC5BC,MAAM,SAAAC,GACLC,WAAW,WACTC,MAAMF,IACL,QAIHG,EAAmB,SAACC,GACjBT,OAAAA,MAAM,GAAGL,OAAAA,GAAmBc,GAAAA,OAAAA,EAAvB,UACTR,KAAK,SAACC,GAAaA,OAAAA,EAASC,SAC5BC,MAAM,SAACC,GAAU,OAAA,IAAIE,MAAMF,MAGhCN,IACGE,KAAK,SAAAS,GACEC,IAAAA,EAAWD,EAAKE,IAAI,SAAAC,GAASL,OAAAA,EAAoBK,GAAAA,OAAAA,EAAMJ,OAE7DK,QAAQC,IAAQJ,EAAAA,IACbV,KAAK,SAAAe,GACJA,EAAaC,QAAQ,SAAAC,GACbC,IAAAA,EAAWtB,SAASC,cAAc,MAExCqB,EAASC,YAAcF,EAAKG,KAC5BzB,EAAQ0B,OAAOH,SAKzBtB,SAAS0B,KAAKD,OAAO1B","file":"main.a26d0ed0.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write your code here\n\nconst baseUrl\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst detailedUrl\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\nconst newItem = document.createElement('th');\n\nconst getPhones = () => {\n  return fetch(baseUrl)\n    .then((response) => response.json())\n    .catch(error => {\n      setTimeout(() => {\n        Error(error);\n      }, 5000);\n    });\n};\n\nconst getPhonesDetails = (id) => {\n  return fetch(`${detailedUrl}` + `${id}.json`)\n    .then((response) => response.json())\n    .catch((error) => new Error(error));\n};\n\ngetPhones()\n  .then(list => {\n    const contacts = list.map(phone => getPhonesDetails(`${phone.id}`));\n\n    Promise.all([...contacts])\n      .then(phoneDetails => {\n        phoneDetails.forEach(item => {\n          const newPhone = document.createElement('li');\n\n          newPhone.textContent = item.name;\n          newItem.append(newPhone);\n        });\n      });\n  });\n\ndocument.body.append(newItem);\n"]}